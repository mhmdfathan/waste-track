'use client';

import Link from 'next/link';
import {
  Home,
  LayoutDashboard,
  Scale,
  BarChart2,
  Users,
  Receipt,
} from 'lucide-react';
import { cn } from '@/lib/utils';
import { usePathname } from 'next/navigation';
import { useEffect, useState } from 'react';
import type { User } from '@/types/auth';
import type { UserRole } from '@prisma/client';
import { getCurrentUser, getUserProfileClient } from '@/lib/auth-client';

export function BottomNav() {
  const pathname = usePathname();
  const [user, setUser] = useState<User | null>(null);
  const [profile, setProfile] = useState<UserRole | null>(null);

  useEffect(() => {
    let isMounted = true;

    const fetchUserAndProfile = async () => {
      try {
        const { data: { user }, error } = await getCurrentUser();

        if (!isMounted) return;

        setUser(user);
        if (user) {
          const profileData = await getUserProfileClient();
          if (isMounted && profileData) {
            setProfile(profileData);
          }
        }
      } catch (error) {
        console.error('Error fetching user and profile:', error);
      }
    };

    fetchUserAndProfile();

    // Set up periodic refresh
    const intervalId = setInterval(fetchUserAndProfile, 5 * 60 * 1000); // Refresh every 5 minutes

    return () => {
      isMounted = false;
      clearInterval(intervalId);
    };
  }, []);

  // Return nothing if no user or profile
  if (!user || !profile) {
    return null;
  }

  // Render menu based on user role
  let menu = [];

  // Admin menu
  if (profile.role === 'ADMIN') {
    menu = [
      { href: '/admin', label: 'Dashboard', icon: LayoutDashboard },
      { href: '/admin/users', label: 'Users', icon: Users },
      { href: '/statistics', label: 'Stats', icon: BarChart2 },
    ];
  }

  // Nasabah menu
  else if (profile.role === 'NASABAH') {
    menu = [
      { href: '/browse', label: 'Home', icon: Home },
      { href: '/dashboard', label: 'Dashboard', icon: LayoutDashboard },
      { href: '/timbang', label: 'Timbang', icon: Scale },
      { href: '/transactions', label: 'Transactions', icon: Receipt },
    ];
  }

  // Pemerintah menu
  else if (profile.role === 'PEMERINTAH') {
    menu = [
      { href: '/browse', label: 'Home', icon: Home },
      { href: '/dashboard', label: 'Dashboard', icon: LayoutDashboard },
      { href: '/statistics', label: 'Stats', icon: BarChart2 },
      { href: '/users', label: 'Users', icon: Users },
    ];
  }

  // Perusahaan menu
  else if (profile.role === 'PERUSAHAAN') {
    menu = [
      { href: '/browse', label: 'Home', icon: Home },
      { href: '/dashboard', label: 'Dashboard', icon: LayoutDashboard },
      { href: '/transactions', label: 'Transactions', icon: Receipt },
    ];
  }

  return (
    <nav className="fixed bottom-0 left-0 z-50 h-16 w-full border-t bg-background lg:hidden">
      <div className="mx-auto grid h-full max-w-lg grid-cols-4">
        {menu.map(({ href, label, icon: Icon }) => {
          const isActive = pathname === href;

          return (
            <Link
              key={href}
              href={href}
              className={cn(
                'inline-flex flex-col items-center justify-center px-5 text-xs font-medium',
                isActive
                  ? 'text-foreground'
                  : 'text-muted-foreground hover:text-foreground',
              )}
            >
              <Icon className="mb-1 h-5 w-5" />
              <span>{label}</span>
            </Link>
          );
        })}
      </div>
    </nav>
  );
}
